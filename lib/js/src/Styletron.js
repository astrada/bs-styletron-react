// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var Curry             = require("bs-platform/lib/js/curry.js");
var ReasonReact       = require("reason-react/lib/js/src/ReasonReact.js");
var StyletronReact    = require("styletron-react");
var StyletronClient   = require("styletron-client");
var Js_null_undefined = require("bs-platform/lib/js/js_null_undefined.js");

var Core = /* module */[];

function make(serverStyles, options, _) {
  return new StyletronClient.default(Js_null_undefined.from_opt(serverStyles), Js_null_undefined.from_opt(options));
}

var Client = /* module */[/* make */make];

function makeStyledClass(base, rule) {
  return StyletronReact.styled(base[1], rule);
}

function makeStyled(base, rule, props, children) {
  var reactClass = StyletronReact.styled(base[1], rule);
  return ReasonReact.wrapJsForReason(reactClass, props, children);
}

function makeStyledComponent(rule, component, make, children) {
  var reactClass = ReasonReact.wrapReasonForJs(component, (function (jsProps) {
          return Curry._2(make, jsProps.className, children);
        }));
  var styledClass = StyletronReact.styled(reactClass, rule);
  return ReasonReact.wrapJsForReason(styledClass, { }, children);
}

function make$1($staropt$star, children) {
  var styletron = $staropt$star ? $staropt$star[0] : make(/* None */0, /* None */0, /* () */0);
  return ReasonReact.wrapJsForReason(StyletronReact.StyletronProvider, {
              styletron: styletron
            }, children);
}

var Provider = /* module */[/* make */make$1];

var React = /* module */[
  /* makeStyledClass */makeStyledClass,
  /* makeStyled */makeStyled,
  /* makeStyledComponent */makeStyledComponent,
  /* Provider */Provider
];

exports.Core   = Core;
exports.Client = Client;
exports.React  = React;
/* ReasonReact Not a pure module */
